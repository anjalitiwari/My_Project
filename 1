var http = require('http');
var url = require('url');
var _ = require('lodash');
var requireTree = require("require-tree");
var commandLineArgs = require('command-line-args');
var optionDefinations = [
    {name:'port',alias:'p',type:Number,defaultValue:8976},
    {name:'sqrLen',alias:'s',type:Number,defaultValue:10},
    {name:'players',alias:'n',type:Number,defaultValue:5}
]
var args = commandLineArgs(optionDefinations);
var generateBoard = require('./generateBoard.js');
var server = http.createServer(handler);
server.listen(args.port, "localhost", 1024, function() {
 console.log('Listening at http://0.0.0.0:' + args.port);
  });
var players = {};
var boardObj;
var boardArray;
var finalObj = {};
var counter = 0;
 for(var i=0; i<args.players; i++){
     players["player" + i] = false;
	 if(!finalObj["player" + i]){
	 finalObj["player" + i]={}
	 finalObj["player" + i]["location"] = 1;
	 finalObj["player" + i]["score"] = 0;
	 finalObj["player" + i]["energy"] = 100/3;
	 }
}

init();

function handler(req,res){
 var params = url.parse(req.url, true, true).query;
 if(counter == args.players.length){
 counter=0;
 }
 //players["player" + counter];
 updateScore(finalObj["player" + counter],params.dice,function(err,count){
  if(err){

  } else {
    counter ++
   }

 });
}

function updateScore(player,dice,callback){
   console.log("in update>>>>>>>",player,dice) 
  player["score"] = player["score"] + dice;
  player["energy"] = player["energy"] -1;
 console.log(player["score"]);
//  console.log(boardArray.indexOf(player["score"]));

}

function init(){
 generateBoard.create(args.sqrLen,function(err,resp){
   if(err){
   // res.end(err,500)
   } else {
    //res.end(resp)
    boardArray = resp.boardArray;
    boardObj = resp.boardObj;
   // console.log(resp.array,"********************",boardObj)
   }
 })
}
